[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +13] = SP;
alias userSP R0;
userSP = SP;
SP = ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +11])*512 -1;
alias physicalpageNum R1;
alias offset R2;
alias Calladd R3;
physicalpageNum = [PTBR + 2*((userSP-5)/512)];
offset = (userSP-5)%512;
Calladd = (physicalpageNum*512) + offset;
alias SysCallNo R4;
SysCallNo = [Calladd];

if(SysCallNo == 11 || SysCallNo == 12) then
	physicalpageNum = [PTBR + 2*((userSP-1)/512)];
	offset = (userSP-1)%512;
	Calladd = (physicalpageNum*512) + offset;
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +13];

	if(SysCallNo == 11) then
		[Calladd] = [SYSTEM_STATUS_TABLE + 1];
	else
		[Calladd] = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +2];
	endif;
	
	ireturn;
endif;

if(SysCallNo == 13) then
	//get pid -> argument-1
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +9] = 13;
	physicalpageNum = [PTBR + 2*((userSP-4)/512)];
	offset = (userSP-4)%512;
	Calladd = (physicalpageNum*512) + offset;
	alias PID R5;
	PID = [Calladd];

	//return address
	physicalpageNum = [PTBR + 2*((userSP-1)/512)];
	offset = (userSP-1)%512;
	Calladd = (physicalpageNum*512) + offset;
	if(PID == [SYSTEM_STATUS_TABLE + 1] || [PROCESS_TABLE + (PID*16) +4] == TERMINATED || PID < 0 || PID >15) then
		[Calladd] = -1;
	else
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +4] = WAIT_PROCESS;
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +5] = PID;
		multipush(R0,R1,R2,R3,R4,R5);
		call MOD_5;
		multipop(R0,R1,R2,R3,R4,R5);
		[Calladd] = 0;
	endif;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +9] = 0;
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +13];
	ireturn;
endif;

if(SysCallNo == 14) then
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +9] = 14;
	alias count R5;
	count = 0;
	while(count<16) do
		if([PROCESS_TABLE + (count*16) +4] == WAIT_PROCESS && [PROCESS_TABLE + (count*16) +5] == [SYSTEM_STATUS_TABLE + 1]) then
			[PROCESS_TABLE + (count*16) +4] = READY;
		endif;
		count = count + 1;
	endwhile;

	//return address
	physicalpageNum = [PTBR + 2*((userSP-1)/512)];
	offset = (userSP-1)%512;
	Calladd = (physicalpageNum*512) + offset;
	[Calladd] = 0;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +9] = 0;
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +13];
	ireturn;
endif;














