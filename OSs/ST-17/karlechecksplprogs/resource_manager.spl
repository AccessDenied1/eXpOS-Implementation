alias functionNum R1;
alias currentPID R2;
alias process_table_entry R4;

process_table_entry = PROCESS_TABLE + currentPID*16;

if (functionNum == 8) then
	while ([TERMINAL_STATUS_TABLE] == 1) do 
		[process_table_entry + 4] = WAIT_TERMINAL;
		multipush(R1,R2,R3,R4);
		call SCHEDULER;
		multipop(R1,R2,R3,R4);
	endwhile;
	[TERMINAL_STATUS_TABLE] = 1;
	[TERMINAL_STATUS_TABLE + 1] = currentPID;
	return;
endif;

if (functionNum == 9) then
	if (currentPID != [TERMINAL_STATUS_TABLE + 1]) then
		R0 = -1;
		return;
	endif;
	[TERMINAL_STATUS_TABLE] = 0;
	alias counter R5;
	counter = 1;
	while(counter <= 15) do
		if ([PROCESS_TABLE + counter*16 + 4] == WAIT_TERMINAL) then
			[PROCESS_TABLE + counter*16 + 4] = READY;
		endif;
		counter = counter + 1;
	endwhile;
	R0 = 0;
	return;
endif;

R0 = -1;
return;
