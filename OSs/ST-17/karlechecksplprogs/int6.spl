alias currentPID R8;
currentPID = [SYSTEM_STATUS_TABLE + 1];

alias process_table_entry R9;
process_table_entry = PROCESS_TABLE + currentPID*16;
[process_table_entry + 9] = 7;

alias userSP R0;
userSP=SP;

[process_table_entry + 13] = SP;

SP = [process_table_entry + 11]*512 - 1;

alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2 * ((userSP - 4)/ 512)];
offset = (userSP - 4) % 512;
fileDescPhysicalAddr = (physicalPageNum * 512) + offset;
alias fileDescriptor R4;
fileDescriptor=[fileDescPhysicalAddr];

if (fileDescriptor != -1)
then

	 alias physicalAddrRetVal R5;
	 physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	 [physicalAddrRetVal] = -1;
	 
else
	
	alias word R6;
	word = [[PTBR + 2*((userSP-3)/512)]*512 + ((userSP - 3)%512)];
	multipush(R0,R1,R2,R3,R4,R5,R6);
	R1 = 4;
	R2 = currentPID;
	R3 = word;
	call DEVICE_MANAGER;
	multipop(R0,R1,R2,R3,R4,R5,R6);
	alias physicalAddrRetVal R7;
	physicalAddrRetVal = ([PTBR + 2 * (userSP - 1)/ 512] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = 0;
	
endif;

SP = userSP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

ireturn;
